{
  "ReRoutes": [
    {
      "DownstreamPathTemplate": "/api/ocelot/{postId}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        },
        {
          "Host": "localhost",
          "Port": 8002
        }
      ],
      "UpstreamPathTemplate": "/ocelot/{postId}",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    },

    {
      "DownstreamPathTemplate": "/api/ocelot/aggrWilling",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/aggrWilling",
      "UpstreamHttpMethod": [ "Get" ],
      "Key": "aggr_willing",
      "Priority": 2
    },
    {
      "DownstreamPathTemplate": "/api/ocelot/aggrJack",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/aggrJack",
      "UpstreamHttpMethod": [ "Get" ],
      "Key": "aggr_jack",
      "Priority": 2
    },
    {
      "DownstreamPathTemplate": "/api/ocelot/aggrError/1",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/aggrError/1",
      "UpstreamHttpMethod": [ "Get" ],
      "Key": "aggr_error",
      "Priority": 2
    },
    {
      "DownstreamPathTemplate": "/api/ocelot/consulWilling",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/ocelot/consulWilling",
      "UpstreamHttpMethod": [ "Get" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "ServiceName": "ocelotService",
      "Priority": 2
    },

    {
      "DownstreamPathTemplate": "/connect/token",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8005
        }
      ],
      "UpstreamPathTemplate": "/token",
      "UpstreamHttpMethod": [ "Post" ],
      "Priority": 2
    },
    {
      "DownstreamPathTemplate": "/api/ocelot/identityWilling",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/identityWilling",
      "UpstreamHttpMethod": [ "Get" ],
      "Priority": 2
    },

    {
      "DownstreamPathTemplate": "/api/ocelot/identityWilling",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/8001/identityWilling",
      "UpstreamHttpMethod": [ "Get" ],
      "Priority": 2,
      "AuthenticationOptions": { //认证授权
        "AuthenticationProviderKey": "APIService8001",
        "AllowedScopes": []
      }
    },
    {
      "DownstreamPathTemplate": "/api/ocelot/identityWilling",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8002
        }
      ],
      "UpstreamPathTemplate": "/ocelot/8002/identityWilling",
      "UpstreamHttpMethod": [ "Get" ],
      "Priority": 2,
      "AuthenticationOptions": { //认证授权
        "AuthenticationProviderKey": "APIService8002",
        "AllowedScopes": []
      }
    },

    {
      "DownstreamPathTemplate": "/api/ocelot/{postId}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/ratelimit/{postId}",
      "UpstreamHttpMethod": [ "Get" ],
      "Priority": 2,
      "RateLimitOptions": { //流量限制 只要在路由中添加RateLimitOptions配置即可
        "ClientWhiteList": [ //数组，在请求头中包含ClientId=xxx的请求不受限流控制，其中ClientId这个key可以修改，xxx表示配置的白名单。
          "markadmin"
        ],
        "EnableRateLimiting": true, //是否启用限流
        "Period": "1m", //限流控制的时间周期，输入单位支持s（秒）, m（分）, h（时）, d（天）
        "PeriodTimespan": 30, //恢复等待时间，当访问超过限流限制的次数后，需要等待的时间，单位为s，如当一分钟内访问超过5次，就需要等待30秒后，访问才会重新有效
        "Limit": 5 //一个时间周期内允许访问的最大次数
      }
    },

    {
      "DownstreamPathTemplate": "/api/ocelot/{postId}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8001
        }
      ],
      "UpstreamPathTemplate": "/ocelot/qos/{postId}",
      "UpstreamHttpMethod": [ "Get" ],
      "Priority": 2,
      "QoSOptions": { // 服务质量
        "ExceptionsAllowedBeforeBreaking": 3, //允许异常次数，当Ocelot转发给该下游服务连续出现异常次数达到该数字时，Ocelot会进行自动熔断，一段时间内不再向该下游服务转发请求
        "DurationOfBreak": 3000, //熔断时间，单位为ms（毫秒），持续多长时间不向该下游服务转发请求
        "TimeoutValue": 5000 //服务质量配置项，超时时间，单位为ms（毫秒），当Ocelot向下游服务转发请求多长时间后，自动认为该请求超时
        //ExceptionsAllowedBeforeBreaking 必须跟 DurationOfBreak一起使用，TimeoutValue可以单独使用。
      }
    }
  ],
  "Aggregates": [
    {
      "ReRouteKeys": [
        "aggr_willing",
        "aggr_jack",
        "aggr_error"
      ],
      "UpstreamPathTemplate": "/aggrLeader"
    },
    {
      "ReRouteKeys": [
        "aggr_willing",
        "aggr_jack",
        "aggr_error"
      ],
      "UpstreamPathTemplate": "/aggrLeaderAdvanced",
      "Aggregator": "LeaderAdvancedAggregator"
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:4727",
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 8500,
      "Type": "Consul"
    },
    "RateLimitOptions": { //流量限制的全局配置
      "DisableRateLimitHeaders": true, //当设为true时，请求头中就不会输出流量限制的相关信息，默认值："false"
      "QuotaExceededMessage": "Customize Tips!", //当请求数量超出流量限制时，输出的信息，默认值："API calls quota exceeded! maximum admitted {Limit} per {Period}."
      "HttpStatusCode": 999, //当请求数量超出流量限制时，输出的状态码，默认值："429"
      "ClientIdHeader": "Test" //标识为白名单中的客户端的请求头key，默认值："ClientId"
    }
  }
}
